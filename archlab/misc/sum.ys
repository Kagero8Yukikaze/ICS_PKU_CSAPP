# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 

# Array of some elements
.align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0
#end

main:	
    irmovq ele1,%rdi
	call sum_list		
	ret

# long sum_list(list_ptr ls)
sum_list:
    xorq %rax,%rax      # val=0 -> %rax=0
loop:
    mrmovq (%rdi),%r8       # %r8=ls->val
    addq %r8,%rax           # %rax+=ls->val
    mrmovq 8(%rdi),%rdi     # ls=ls->next
    jmp test
test:
    andq %rdi,%rdi          # return if %rdi==0
    jne loop
    ret



# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
